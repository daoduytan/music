{"version":3,"sources":["pages/home/home.tsx"],"names":["Home","useAudio","audios","addAudio","useQuery","MUSICS","loading","data","error","console","log","useEffect","getMusicList","map","music","_id"],"mappings":"gMASaA,EAAkB,WAAO,IAAD,EACNC,cAArBC,EAD2B,EAC3BA,OAAQC,EADmB,EACnBA,SADmB,EAEFC,mBAASC,KAAlCC,EAF2B,EAE3BA,QAASC,EAFkB,EAElBA,KAAMC,EAFY,EAEZA,MASvB,OARAC,QAAQC,IAAI,UAAWJ,EAASC,EAAMC,GAEtCG,qBAAU,WACJJ,GACFJ,EAASI,EAAKK,gBAEf,CAACL,IAEAD,EACK,0CAGLE,EACK,wCAIP,8BACGN,EAAOW,KAAI,SAACC,GACX,OAAO,cAAC,IAAD,CAAsBA,MAAOA,GAAlBA,EAAMC,WAMjBf","file":"static/js/3.45e21d92.chunk.js","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport { FC, useEffect } from \"react\";\nimport { Song } from \"../../components\";\nimport { useAudio } from \"../../context\";\nimport { ISong } from \"../../interface\";\nimport { MUSICS } from \"../../query\";\n\ninterface Props {}\n\nexport const Home: FC<Props> = () => {\n  const { audios, addAudio } = useAudio();\n  const { loading, data, error } = useQuery(MUSICS);\n  console.log(\"loading\", loading, data, error);\n\n  useEffect(() => {\n    if (data) {\n      addAudio(data.getMusicList);\n    }\n  }, [data]);\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  if (error) {\n    return <div>Error</div>;\n  }\n\n  return (\n    <div>\n      {audios.map((music: ISong) => {\n        return <Song key={music._id} music={music} />;\n      })}\n    </div>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}